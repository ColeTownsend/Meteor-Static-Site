// Typography
// ---------------------------------------
// Setting root sizes and base styles.
html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  @include rootsize;
}

// Site-wide base styles.
body {
  font-family: unquote(map-get($bodytype, font-family));
  font-style: normal;
  font-weight: map-get($bodytype, regular);
  line-height: 2rem;
  @include fontsize(zeta, all);
}

// Links.
a {
  -webkit-transition: color .1s, background-color .1s;
  -moz-transition: color .1s, background-color .1s;
  -ms-transition: color .1s, background-color .1s;
  -o-transition: color .1s, background-color .1s;
  transition: color .1s, background-color .1s;
  color: $linkcolor;
  text-decoration: none;
  &:hover,
  &:active,
  &:focus {
    color: map-get($accentcolors, map-get($oppositecolors, pink));
    text-decoration: none;
  }
}

// utility classes
.headerfont {
  font-family: unquote(map-get($headingtype, font-family));
}

.bodyfont {
  font-family: unquote(map-get($bodytype, font-family));
}

.bold {
  font-weight: 700;
}

.regular,
.typeset .regular {
  font-weight: normal;
  font-weight: 400;
}

.semilight,
.typeset .semilight {
  font-weight: unquote(map-get($bodytype, font-weight));
}

.light,
.typeset .light {
  font-weight: 200;
}

.mono {
  font-family: unquote(map-get($monospacetype, font-family));
}

.shout,
.typeset .shout {
  font-family: "Avenir", "Avenir Next", "Helvetica";
}

// Styles for typeset text.
.typeset {
  // Nice underlines for text links.
  p a,
  li a {
    color: $linkcolor;
    text-decoration: none;
    &:hover,
    &:active,
    &:focus {
      color: $hovercolor;
      text-decoration: none;
    }
    &:not(.plain-link) {
      position: relative;
      z-index: 1;
      overflow: visible;
      &:hover {

      }
      &:after {
        content: '';
        width: 100%;
        height: 100%;
        position: absolute;
        bottom: 0;
        left: 0;
        // styles
        @include transition(all .4s $ease-in-out-quad);
        $underline: map-get($accentcolors, purple);
        @include background(linear-gradient(top, rgba(0, 0, 0, 0) 50%, transparentize($underline, .50) 50%));
        background-position: 0 95%;
        background-repeat: repeat-x;
        background-size: 100% 0.2rem;
        z-index: 100;
      }
      &:hover,
      &:active,
      &:focus {
        color: $linkcolor;
        &:after {
          content: '';
          width: 100%;
          height: 100%;
          position: absolute;
          bottom: 0;
          left: 0;
          z-index: 100;
          // styles
          @include transition(all .4s $ease-in-out-quad);
          $borderHover: map-get($accentcolors, purple);
          @include background(linear-gradient(top, rgba(0, 0, 0, 0) 50%, transparentize($borderHover, .2) 50%));
          background-position: 0 95%;
          background-repeat: repeat-x;
          background-size: 100% 0.2rem;
        }
      }
    }
  }
  // Paragraphs. OpenType ligatures and oldstyle figures enabled if available.
  p {
    -webkit-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
    -moz-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
    -ms-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
    -o-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
    font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
    @include baseline($fontsize: zeta, $font: $bodytype, $lineheight: 2, $below: 2, $breakpoint: all);
  }
  // Headings. OpenType ligatures, discretionary ligatures and lining figures enabled if available.
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    -webkit-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    -moz-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    -ms-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    -o-font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
    color: $headingcolor;
    font-family: unquote(map-get($headingtype, font-family));
    font-style: normal;
    font-weight: map-get($headingtype, bold);
  }
  // Heading level 1.
  h1,
  .alpha {
    @include sassline($fontsize: alpha, $font: $headingtype, $lineheight: 3, $below: 1, $breakpoint: all);
    font-weight: map-get($headingtype, regular);
  }
  // Heading level 2.
  h2,
  .beta {
    @include sassline(beta, $headingtype, 3, 1, all);
    font-weight: map-get($headingtype, bold);
  }
  // Heading level 3.
  h3,
  .gamma {
    @include sassline(gamma, $headingtype, 3, 1, all);
  }
  // Heading level 4.
  h4,
  .delta {
    @include sassline(delta, $headingtype, 2, 0, all);
  }
  // Heading level 5.
  h5,
  .epsilon {
    @include sassline(epsilon, $headingtype, 2, 0, all);
  }
  // Heading level 6.
  h6,
  .zeta {
    @include sassline(zeta, $headingtype, 2, 0, all);
  }
  // Heading level 7.
  .eta {
    @include sassline(eta, $bodytype, 2, 2, all);
  }
  // Lists.
  ul,
  ol {
    @include baseline(zeta, $bodytype, 2, 2, all);
    li {
      -webkit-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      -moz-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      -ms-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      -o-font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
      margin-left: 2rem;
      padding-left: 1rem;
      position: relative;
      // special dots
      @include breakpoint(break-1) {
        margin-left: 1rem;
        padding-left: .5rem;
      }
    }
    &.unstyled {
      list-style: none;
      li {
        list-style-type: none;
      }
    }
  }
  ul {
    list-style-type: none;
    li {
      &:before {
        content: '';
        width: 1px;
        height: 10px;
        left: -0.5rem;
        position: absolute;
        top: calc(1rem - 5px);
        background: map-get($accentcolors, cadet-blue);
        @include transform(rotate(-45deg));
      }
      &:after {
        content: '';
        width: 1px;
        height: 10px;
        left: -0.5rem;
        position: absolute;
        top: calc(1rem - 5px);
        background: map-get($accentcolors, cadet-blue);
        @include transform(rotate(45deg));
      }
    }
  }
  // Bold.
  b,
  strong,
  .bold {
    font-weight: map-get($bodytype, bold);
  }
  // Italic.
  em,
  i,
  .italic {
    position: relative;
    background: saturate(map-get($accentcolors, yellow), 10);
  }
  // Caption and inline small text.
  small,
  .caption {
    font-family: unquote(map-get($headingtype, font-family));
    font-style: normal;
    font-weight: 400;
    color: $captioncolor;
    @include fontsize(theta, all);
  }
  small {
    line-height: 1rem;
  }
  .caption {
    color: $captioncolor;
    @include baseline(theta, $headingtype, 2, 2, all);
  }
  // Nice spacing for captions.
  h1 + .caption,
  .alpha + .caption,
  h2 + .caption,
  .beta + .caption,
  h3 + .caption,
  .gamma + .caption {
    margin-top: -1rem;
  }
  .delta + .caption,
  .epsilon + .caption,
  .zeta + .caption {
    margin-top: 0rem;
  }
  // Quotes.
  blockquote {
    p {
      border-left: 0.15rem solid $linkcolor;
      font-style: map-get($bodytype, italic);
      padding-left: 1rem;
      // Add spacing below blockquote paragraphs to align to baseline grid.
      $get-scale: map-get($modular-scale, scale-0);
      $get-size: map-get($get-scale, zeta);
      $rootsize: nth($sizes, 1);
      $baseline-shift: #{($get-size / 2 * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001};
      $baseline-push: #{3 - (($get-size * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001)};
      margin-bottom: #{$baseline-push}rem;
      padding-bottom: #{$baseline-shift}rem;
      @for $i from 2 through $breakpoints-limit {
        $get-scale: map-get($modular-scale, scale-#{$i - 1});
        $get-size: map-get($get-scale, zeta);
        $rootsize: nth($sizes, $i);
        $baseline-shift: #{($get-size / 2 * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001};
        $baseline-push: #{3 - (($get-size * ((2 * $rootsize / $get-size) - map-get($bodytype, cap-height))) / $rootsize + 0.00001)};
        @media screen and (min-width: nth($points, $i) / 16 * 1em) {
          margin-bottom: #{$baseline-push}rem;
          padding-bottom: #{$baseline-shift}rem;
        }
      }
    }
    @include breakpoint(break-1) {
      margin-left: -1rem;
    }
  }
  // Horizontal rule.
  hr {
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to($captioncolor));
    background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, 0) 50%, $captioncolor 50%);
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 50%, $captioncolor 50%);
    background-position: 0 50%;
    background-repeat: repeat-x;
    background-size: 100% 0.15rem;
    border: 0;
    margin: 0;
    padding-bottom: 2rem;
    padding-top: 2rem;
  }
  // Code block.
  code,
  pre {
    background-color: $codeBackgroundcolor;
    font-family: unquote(map-get($monospacetype, font-family));
    color: map-get($accentcolors, yellow) !important;
  }
  pre {
    display: block;
    margin-bottom: 2rem;
    padding: 1rem;
    white-space: pre;
    white-space: pre-wrap;
    word-break: break-all;
    word-wrap: break-word;
  }
  code {
    line-height: 1rem;
    @include fontsize(theta, all);
  }
  // Letter space those capitals people, Jan Tschichold would be proud.
  .upper {
    letter-spacing: 0.1rem;
    text-transform: uppercase;
  }
  // Real small caps.
  .small-caps {
    -webkit-font-feature-settings: 'smcp' 1, 'kern' 1;
    -moz-font-feature-settings: 'smcp' 1, 'kern' 1;
    -ms-font-feature-settings: 'smcp' 1, 'kern' 1;
    -o-font-feature-settings: 'smcp' 1, 'kern' 1;
    font-feature-settings: 'smcp' 1, 'kern' 1;
    letter-spacing: 0.1rem;
  }
  sup,
  .sup {
    position: relative;
    padding-right: 4px;
    font-size: .75em;
    &:after {
      content: '*';
      opacity: 1;
      position: absolute;
      display: block;
      font-weight: bold;
      width: 2px;
      height: 2px;
      top: -.9rem;
      left: -2px;
    }
  }
  // Consistent height numbers with OpenType.
  .lining-numerals {
    -webkit-font-feature-settings: 'lnum' 1, 'kern' 1;
    -moz-font-feature-settings: 'lnum' 1, 'kern' 1;
    -ms-font-feature-settings: 'lnum' 1, 'kern' 1;
    -o-font-feature-settings: 'lnum' 1, 'kern' 1;
    font-feature-settings: 'lnum' 1, 'kern' 1;
  }
  // Ascending and descending numbers with OpenType.
  .oldstyle-numerals {
    -webkit-font-feature-settings: 'onum' 1, 'kern' 1;
    -moz-font-feature-settings: 'onum' 1, 'kern' 1;
    -ms-font-feature-settings: 'onum' 1, 'kern' 1;
    -o-font-feature-settings: 'onum' 1, 'kern' 1;
    font-feature-settings: 'onum' 1, 'kern' 1;
  }
}
